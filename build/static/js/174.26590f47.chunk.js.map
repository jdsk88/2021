{"version":3,"file":"static/js/174.26590f47.chunk.js","mappings":"sPASA,IC0BmBA,EAAAA,EAAAA,KAAO,SAACC,GACIA,EAArBC,OAAR,IAAmBC,ECnCN,SAAkCC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,GAAS,EAAAC,EAAA,GAA6BL,EAAQC,GAGlD,GAAIK,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBP,GAEpD,IAAKG,EAAI,EAAGA,EAAIK,EAAiBC,OAAQN,IACvCD,EAAMM,EAAiBL,GACnBF,EAASS,QAAQR,IAAQ,GACxBI,OAAOK,UAAUC,qBAAqBC,KAAKb,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,EDmBP,CAA6BP,EAA7B,GACA,OAAO,SAAC,KAAD,UAAgBE,MAFNH,EAGhB,gBAAGkB,EAAH,EAAGA,MAAH,EAAUhB,OAAV,MAAwB,CACzBiB,WAAY,OACZC,WAAYF,EAAMG,YAAYC,OAAO,YAAa,CAChDC,SAAUL,EAAMG,YAAYE,SAASC,eDvCvB,WAChB,OACE","sources":["views/pages/Feeds.js","components/molecules/SocialFeed.js","../javascript/esm|/home/jdsk88/dev/javascript/2021/react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { SocialFeed } from \"components/molecules/SocialFeed\";\nimport React from \"react\";\nconst FeedsDash = () => {\n  return (\n    <>\n      {/* <SocialFeed /> */}\n    </>\n  );\n};\nexport default FeedsDash;\n","import React, { useEffect, useState } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport { styled } from \"@mui/material/styles\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { red } from \"@mui/material/colors\";\nimport {\n  ArrowDownward,\n  ArrowUpward,\n  CameraAltOutlined,\n  MessageOutlined,\n  PinDropOutlined,\n  Send,\n  ThumbDownAltOutlined,\n  ThumbUpAlt,\n} from \"@mui/icons-material\";\nimport {\n  Badge,\n  Divider,\n  Icon,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  TextField,\n} from \"@mui/material\";\nimport moment from \"moment\";\nimport { Box } from \"@mui/system\";\n\nconst ExpandMore = styled((props) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  marginLeft: \"auto\",\n  transition: theme.transitions.create(\"transform\", {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\nexport const SocialFeed = ({ feed }) => {\n  // const uData = useSelector(userData);\n  const [user, setUser] = useState(\"\");\n  const [comments, setComments] = useState(feed.comments);\n  const CHARACTER_LIMIT = 255;\n  const [likes] = useState({ userId: user._id, like: false });\n  const [like, setLike] = useState(false);\n  const lastComment = comments.at(-1);\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   setUser(uData);\n  //   setComments(feed.comments);\n  // }, [uData, comments]);\n\n  const handleLike = () => {\n    if (!like === true) {\n      likes.like = true;\n    } else {\n      likes.like = false;\n    }\n    setLike(!like);\n    console.log(likes);\n  };\n  const [values, setValues] = React.useState({\n    name: \"\",\n  });\n\n  const [files, setFiles] = useState({\n    selectedFiles: null,\n  });\n  const onFilesChange = async (files) => {\n    if (files.length !== 0) {\n      setFiles({\n        selectedFiles: files,\n      });\n    }\n  };\n\n  const { enqueueSnackbar } = useSnackbar();\n  const Snackbar = (msg, variant, v) => {\n    enqueueSnackbar(msg, { variant });\n  };\n\n  const handleChange = (name) => (event) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n  const [expanded, setExpanded] = useState(false);\n  const [commentsExpanded, setCommentsExpanded] = useState(false);\n  const handleAddComment = (event) => {\n    event.preventDefault();\n    const commentId = 1234565497;\n    let filesUrl = [];\n    if (files.selectedFiles !== null) {\n      for (let file in Array.from(files.selectedFiles)) {\n        filesUrl.push({\n          fileName:\n            commentId + \"_\" + Array.from(files.selectedFiles)[file].name,\n          url: `${\"https://localhost:8989\"}/images/${\n            Array.from(files.selectedFiles)[file].name\n          }`,\n          tags: [],\n        });\n      }\n    }\n    const comment = {\n      feedId: feed._id,\n      feedIndex: feed.index,\n      userId: user._id,\n      userName: user.first_name,\n      userAvatar: user.avatar,\n      message: values.name,\n      dateOfComment: moment().format(\"lll\"),\n      image: filesUrl,\n    };\n    if (values.name <= 3) {\n      Snackbar(\"Please type comment message\", \"warning\");\n    } else {\n      console.log(comment);\n      // dispatch(addFComment(comment));\n      setFiles({\n        selectedCFiles: null,\n      });\n      setValues({ name: \"\" });\n    }\n  };\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleExpandComments = () => {\n    setCommentsExpanded(!commentsExpanded);\n  };\n\n  return (\n    <Card style={{ marginBottom: 5, maxWidth: 750 }}>\n      <CardHeader\n        avatar={\n          <Avatar\n            sx={{ bgcolor: red[500] }}\n            src={feed.avatar}\n            aria-label=\"recipe\"\n          >\n            R\n          </Avatar>\n        }\n        title={feed.title}\n        subheader={feed.subTitle}\n      />\n      <CardMedia\n        component=\"img\"\n        style={{ objectFit: \"cover\" }}\n        image={feed.images ? feed.images[0].url : \"\"}\n        alt={feed.subTitle}\n      />\n      <></>\n      <CardContent>\n        <Typography\n          variant=\"body2\"\n          color=\"text.secondary\"\n          style={{ overflowWrap: \"anywhere\" }}\n        >\n          {feed.content}\n        </Typography>\n      </CardContent>\n      <CardActions\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"stretch\",\n          textAlign: \"left\",\n        }}\n      >\n        <Icon style={{ width: \"15%\" }} aria-label=\"add to favorites\">\n          <PinDropOutlined />\n        </Icon>\n        <Typography style={{ width: \"55%\" }}>{feed.location}</Typography>\n        <IconButton\n          style={{ width: \"15%\" }}\n          aria-label=\"share\"\n          onClick={handleLike}\n        >\n          {like ? <ThumbUpAlt color={\"primary\"} /> : <ThumbDownAltOutlined />}\n        </IconButton>\n        <ExpandMore\n          style={{ width: \"15%\" }}\n          expand={expanded}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <Badge\n            badgeContent={feed.comments ? feed.comments.length : \"\"}\n            color=\"primary\"\n          >\n            <MessageOutlined />\n          </Badge>\n        </ExpandMore>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <Divider />\n        <CardContent style={{ padding: 8 }}>\n          <Box\n            sx={{\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-around\",\n              padding: 0,\n              alignItems: \"center\",\n            }}\n            component=\"form\"\n            noValidate\n            onSubmit={handleAddComment}\n          >\n            <Typography style={{ width: \"15%\" }}>\n              {values.name.length}/{CHARACTER_LIMIT}\n            </Typography>\n            <p></p>\n            <TextField\n              inputProps={{\n                maxLength: CHARACTER_LIMIT,\n              }}\n              required\n              multiline\n              maxRows={5}\n              style={{ width: \"55%\" }}\n              autoFocus\n              name=\"comment_msg\"\n              id=\"comment_msg\"\n              variant=\"outlined\"\n              size=\"small\"\n              onChange={handleChange(\"name\")}\n              value={values.name}\n            />\n            <input\n              type=\"file\"\n              accept={\".gif, .jpg, .jpeg, .mp4, .png, .svg\"}\n              multiple\n              onChange={(e) => {\n                onFilesChange(e.currentTarget.files);\n              }}\n              id=\"icon-button-file2\"\n              style={{ display: \"none\" }}\n            />\n            <label htmlFor=\"icon-button-file2\">\n              <IconButton aria-label=\"upload picture\" component=\"span\">\n                <CameraAltOutlined />\n              </IconButton>\n            </label>\n            <IconButton type=\"submit\" style={{ width: \"15%\" }}>\n              <Send />\n            </IconButton>\n          </Box>\n        </CardContent>\n        <CardContent\n          style={{ padding: 8 }}\n          sx={{\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"stretch\",\n            textAlign: \"left\",\n          }}\n        >\n          <ListItem key={\"index\"}>\n            <ListItemAvatar>\n              <Avatar\n                src={lastComment ? lastComment.userAvatar : \"\"}\n                alt=\"avatar\"\n              />\n            </ListItemAvatar>\n            <ListItemText\n              style={{ overflowWrap: \"anywhere\" }}\n              primary={\n                lastComment\n                  ? `${lastComment.message.substring(0, 20)}...`\n                  : \" No Comments yet\"\n              }\n              secondary={\n                lastComment &&\n                `${lastComment.userName} at ${lastComment.dateOfComment}`\n              }\n            />\n            <ExpandMore\n              style={{ width: \"15%\", display: \"flex\", flexDirection: \"column\" }}\n              expand={commentsExpanded}\n              onClick={handleExpandComments}\n            >\n              {commentsExpanded ? (\n                <>\n                  <ArrowUpward />\n                  <Typography>less</Typography>\n                </>\n              ) : (\n                <>\n                  <ArrowDownward />\n                  <Typography>more</Typography>\n                </>\n              )}\n            </ExpandMore>\n          </ListItem>\n        </CardContent>\n        <CardContent>\n          <Collapse in={commentsExpanded} timeout=\"auto\" unmountOnExit>\n            <div style={{ display: \"flex\", flexDirection: \"column-reverse\" }}>\n              {comments &&\n                comments.map((comment, index) => (\n                  <ListItem key={index}>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        width: \"100%\",\n                        background: \"rgb(180,222,233,.2)\",\n                        borderRadius: \"10px 10px 10px 10px\",\n                      }}\n                    >\n                      <CardMedia\n                        component=\"img\"\n                        style={{\n                          borderRadius: \"10px 10px 0px 0px\",\n                          objectFit: \"scale-down\",\n                        }}\n                        image={comment.image !== 0 ? comment.image[0] : \" \"}\n                        alt={feed.subTitle}\n                      />\n                      <ListItemText\n                        style={{\n                          width: \"100%\",\n                          overflowWrap: \"anywhere\",\n                          padding: 15,\n                          borderRadius: 25,\n                          overflowY: \"scroll\",\n                        }}\n                        primary={comment.message}\n                        secondary={`${comment.userName} at ${comment.dateOfComment}`}\n                      />\n                    </div>\n\n                    <ListItemAvatar style={{ width: \"10%\", paddingLeft: 20 }}>\n                      <Avatar src={comment.userAvatar} alt=\"avatar\" />\n                    </ListItemAvatar>\n                  </ListItem>\n                ))}\n            </div>\n          </Collapse>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["styled","props","expand","other","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","theme","marginLeft","transition","transitions","create","duration","shortest"],"sourceRoot":""}