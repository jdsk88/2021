{"version":3,"file":"static/js/709.9d228322.chunk.js","mappings":"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","sources":["components/atoms/Table/Basic.js","views/crypto/index.js","views/crypto/table.js"],"sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useSelector } from \"react-redux\";\nimport { Typography } from \"@mui/material\";\n\nexport default function BasicTable({ data, name }) {\n  const cryptocurrencies = useSelector((state) => state.crypto.data);\n  let rows = [];\n  if (cryptocurrencies[0].length > 1) {\n    cryptocurrencies[0].forEach((element, i) => {\n      rows.push({\n        name: element.name.name,\n        image: element.name.image.small,\n        LastPrice: element.marketData.current_price.usd,\n        prc: element.marketData.price_change_percentage_24h,\n        Symbol: element.name.symbol,\n        dayHigh: element.marketData.high_24h.usd,\n        dayLow: element.marketData.low_24h.usd,\n        dayPriceChart: element.marketData.market_cap_change_24h_in_currency.usd,\n        Coins: element.marketData.total_supply,\n        MarketCup: element.marketData.total_volume.usd,\n      });\n    });\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell sx={{ display: \"flex\" }}>\n              <Typography>{name}</Typography>\n            </TableCell>\n            <TableCell>Last Price</TableCell>\n            <TableCell>%</TableCell>\n            <TableCell>Symbol</TableCell>\n            <TableCell>24 High</TableCell>\n            <TableCell>24 Low</TableCell>\n            <TableCell>Coins</TableCell>\n            <TableCell>Market Cup</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.name}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                sx={{ display: \"flex\", justifyContent: \"space-evenly\" }}\n              >\n                <img\n                  src={row.image}\n                  style={{\n                    width: \"30%\",\n                    height: \"25px\",\n                    objectFit: \"scale-down\",\n                  }}\n                />\n                <Typography sx={{ width: \"70%\" }}>{row.name}</Typography>\n              </TableCell>\n              <TableCell>{row.LastPrice}</TableCell>\n              <TableCell>{row.prc}</TableCell>\n              <TableCell>{row.Symbol}</TableCell>\n              <TableCell>{row.dayHigh}</TableCell>\n              <TableCell>{row.dayLow}</TableCell>\n              <TableCell>{row.Coins}</TableCell>\n              <TableCell>{row.MarketCup}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CryptoServices from \"services/api/crypto\";\nimport CryptoTable from \"./table\";\n\nconst CryptoDashboardPage = () => {\n  const data = useSelector((state) => state.crypto.data);\n  let rows = [];\n  const dispatch = useDispatch();\n  useEffect(() => {\n    CryptoServices.getAllData(dispatch);\n  }, []);\n\n  data[0].forEach((element, i) => {\n    rows.push({\n      name: element.name.name,\n      image: element.name.image.small,\n      LastPrice: element.marketData.current_price.usd,\n      prc: element.marketData.price_change_percentage_24h,\n      Symbol: element.name.symbol,\n      dayHigh: element.marketData.high_24h.usd,\n      dayLow: element.marketData.low_24h.usd,\n      dayPriceChart: element.marketData.market_cap_change_24h_in_currency.usd,\n      Coins: element.marketData.total_supply,\n      MarketCup: element.marketData.total_volume.usd,\n    });\n  });\n\n  return <CryptoTable rows={rows} />;\n};\nexport default CryptoDashboardPage;\n","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Card, Typography } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CRYPTO_ALL } from \"store/actions\";\nimport CryptoServices from \"services/api/crypto\";\nimport BasicTable from \"components/atoms/Table/Basic\";\nfunction DashboardContent() {\n  const dispatch = useDispatch();\n  const cryptocurrencies = useSelector((state) => state.crypto.data);\n  React.useEffect(() => {\n    CryptoServices.getAllData(dispatch);\n    dispatch({ type: CRYPTO_ALL });\n  }, [dispatch]);\n  return (\n    <>\n      <Grid item xs={12} sm={12} md={12} xl={12}>\n        <Card>\n          <Typography textAlign=\"center\" variant=\"h6\"></Typography>\n        </Card>\n      </Grid>\n      <Grid item xs={12} sm={12} md={12} xl={12}>\n        {cryptocurrencies.length < 1 ? (\n          <></>\n        ) : (\n          <Card>\n            <BasicTable name={\"Currency\"} />\n          </Card>\n        )}\n      </Grid>\n    </>\n  );\n}\n\nexport default function CrypotTable() {\n  return <DashboardContent />;\n}\n"],"names":["BasicTable","data","name","cryptocurrencies","useSelector","state","crypto","rows","length","forEach","element","i","push","image","small","LastPrice","marketData","current_price","usd","prc","price_change_percentage_24h","Symbol","symbol","dayHigh","high_24h","dayLow","low_24h","dayPriceChart","market_cap_change_24h_in_currency","Coins","total_supply","MarketCup","total_volume","component","Paper","sx","minWidth","display","map","row","border","scope","justifyContent","src","style","width","height","objectFit","dispatch","useDispatch","useEffect","CryptoServices","DashboardContent","React","type","CRYPTO_ALL","item","xs","sm","md","xl","textAlign","variant","CrypotTable"],"sourceRoot":""}